import { Composer } from "grammy";
import { createLogger } from "../../utils/logger";
import { mainKeyboard } from "../keyboards";

const logger = createLogger("command:help");

const composer = new Composer();

composer.command("help", async (ctx) => {
  try {
    await ctx.reply(
      `*–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º*

üìù *–í—ã–±–æ—Ä —Ç–∞—Ä–∏—Ñ–∞*:
1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "üìù –í—ã–±—Ä–∞—Ç—å —Ç–∞—Ä–∏—Ñ" –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é
2. –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ –∏–∑ —Å–ø–∏—Å–∫–∞
3. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤—ã–±–æ—Ä

üìä *–ü—Ä–æ—Å–º–æ—Ç—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–¥–ø–∏—Å–∫–µ*:
–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "üìä –ú–æ—è –ø–æ–¥–ø–∏—Å–∫–∞" –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é

üîë *–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è*:
–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "üîë –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è" –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é

üì± *–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é*:
1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "üì± –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è" –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é
2. –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É
3. –°–ª–µ–¥—É–π—Ç–µ –ø–æ—à–∞–≥–æ–≤–æ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏

üí¨ *–ü–æ–¥–¥–µ—Ä–∂–∫–∞*:
–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞"`,
      {
        parse_mode: "Markdown",
        reply_markup: mainKeyboard,
      }
    );
  } catch (error) {
    logger.error("–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –∫–æ–º–∞–Ω–¥—ã /help", error);
    await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
  }
});

export default composer; 