import { Composer } from "grammy";
import { createLogger } from "../../utils/logger";

const logger = createLogger("command:help");

const composer = new Composer();

composer.command("help", async (ctx) => {
  try {
    await ctx.reply(
      `*–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º*

üìù *–í—ã–±–æ—Ä —Ç–∞—Ä–∏—Ñ–∞*:
1. –ù–∞–∂–º–∏—Ç–µ "üìù –í—ã–±—Ä–∞—Ç—å —Ç–∞—Ä–∏—Ñ" –∏–ª–∏ /tariffs
2. –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ –∏–∑ —Å–ø–∏—Å–∫–∞
3. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤—ã–±–æ—Ä

üìä *–ü—Ä–æ—Å–º–æ—Ç—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–¥–ø–∏—Å–∫–µ*:
–ù–∞–∂–º–∏—Ç–µ "üìä –ú–æ—è –ø–æ–¥–ø–∏—Å–∫–∞" –∏–ª–∏ /subscription

üîë *–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è*:
–ù–∞–∂–º–∏—Ç–µ "üîë –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è" –∏–ª–∏ /connection

üì± *–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ VPN –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö*:
1. –°–∫–∞—á–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ V2rayNG (Android) –∏–ª–∏ Happ (iOS)
2. –û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –∏–ª–∏ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
3. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∏ –≤–∫–ª—é—á–∏—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ

–ü–æ –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É: @WinstonVPNSupport`,
      {
        parse_mode: "Markdown",
      }
    );
  } catch (error) {
    logger.error("–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –∫–æ–º–∞–Ω–¥—ã /help", error);
    await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
  }
});

export default composer; 