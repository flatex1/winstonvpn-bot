import { Composer } from "grammy";
import { mainKeyboard } from "../keyboards";
import { createLogger } from "../../utils/logger";
import convexClient from "../../services/convex-client";

const logger = createLogger("command:start");

const composer = new Composer();

composer.command("start", async (ctx) => {
  try {
    const telegramId = ctx.from?.id.toString();
    const username = ctx.from?.username;
    const firstName = ctx.from?.first_name;
    const lastName = ctx.from?.last_name;

    logger.info(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${telegramId} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞`);

    await convexClient.createOrUpdateUser(
      telegramId!,
      username,
      firstName ?? "",
      lastName ?? ""
    );

    await ctx.reply(
      `üëã –ü—Ä–∏–≤–µ—Ç, ${firstName}!

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Winston VPN - —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –ø—Ä–æ–≤–æ–¥–Ω–∏–∫ –≤ –º–∏—Ä —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞.

üöÄ *–ß—Ç–æ —è —É–º–µ—é*:
‚Ä¢ –í—ã–¥–∞–≤–∞—Ç—å VPN-–ø–æ–¥–ø–∏—Å–∫–∏
‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
‚Ä¢ –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –≤–Ω–∏–∑—É –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:
‚Ä¢ üìä –ú–æ—è –ø–æ–¥–ø–∏—Å–∫–∞
‚Ä¢ üîë –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
‚Ä¢ üìù –í—ã–±—Ä–∞—Ç—å —Ç–∞—Ä–∏—Ñ
‚Ä¢ üì± –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
‚Ä¢ ‚ùì –ü–æ–º–æ—â—å

–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ –∏ –Ω–∞—á–Ω–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è VPN –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!`,
      {
        parse_mode: "Markdown",
        reply_markup: mainKeyboard,
      }
    );
  } catch (error) {
    logger.error("–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –∫–æ–º–∞–Ω–¥—ã /start", error);
    await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è "üîç –û –±–æ—Ç–µ"
composer.hears("üîç –û –±–æ—Ç–µ", async (ctx) => {
  await ctx.reply(
    `*WinstonVPN Bot*

–í–µ—Ä—Å–∏—è: 1.0.1
–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: @liquid00

–≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–æ—Å—Ç—É–ø –∫ VPN-—Å–µ—Ä–≤–∏—Å—É –Ω–∞ –±–∞–∑–µ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ VLESS + XTLS.
–ù–∞–¥–µ–∂–Ω–æ–µ –∏ –±—ã—Å—Ç—Ä–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –¥–ª—è –æ–±—Ö–æ–¥–∞ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫.

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.`,
    {
      parse_mode: "Markdown",
    }
  );
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è "‚ùì –ü–æ–º–æ—â—å"
composer.hears("‚ùì –ü–æ–º–æ—â—å", async (ctx) => {
  try {
    await ctx.reply(
      `*–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º*

üìù *–í—ã–±–æ—Ä —Ç–∞—Ä–∏—Ñ–∞*:
1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "üìù –í—ã–±—Ä–∞—Ç—å —Ç–∞—Ä–∏—Ñ" –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é
2. –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ –∏–∑ —Å–ø–∏—Å–∫–∞
3. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤—ã–±–æ—Ä

üìä *–ü—Ä–æ—Å–º–æ—Ç—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–¥–ø–∏—Å–∫–µ*:
–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "üìä –ú–æ—è –ø–æ–¥–ø–∏—Å–∫–∞" –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é

üîë *–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è*:
–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "üîë –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è" –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é

üì± *–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é*:
1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "üì± –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è" –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é
2. –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É
3. –°–ª–µ–¥—É–π—Ç–µ –ø–æ—à–∞–≥–æ–≤–æ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏

üí¨ *–ü–æ–¥–¥–µ—Ä–∂–∫–∞*:
–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞"`,
      {
        parse_mode: "Markdown",
        reply_markup: mainKeyboard,
      }
    );
  } catch (error) {
    logger.error("–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –∫–Ω–æ–ø–∫–∏ '–ü–æ–º–æ—â—å'", error);
    await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è "üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞"
composer.hears("üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞", async (ctx) => {
  try {
    await ctx.reply(
      `*–ü–æ–¥–¥–µ—Ä–∂–∫–∞ WinstonVPN*

–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º: @WinstonVPNSupport

–ú—ã –ø–æ–º–æ–∂–µ–º –≤–∞–º:
‚Ä¢ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å VPN –Ω–∞ –≤–∞—à–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
‚Ä¢ –†–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º
‚Ä¢ –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ —Ä–∞–±–æ—Ç–µ —Å–µ—Ä–≤–∏—Å–∞

–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏: –µ–∂–µ–¥–Ω–µ–≤–Ω–æ —Å 9:00 –¥–æ 21:00 –ú–°–ö`,
      {
        parse_mode: "Markdown",
        reply_markup: mainKeyboard,
      }
    );
  } catch (error) {
    logger.error("–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –∫–Ω–æ–ø–∫–∏ '–ü–æ–¥–¥–µ—Ä–∂–∫–∞'", error);
    await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
  }
});

export default composer; 